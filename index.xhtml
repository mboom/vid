<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="nl" lang="nl">
    <head>
        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons"/>
        <link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.indigo-pink.min.css"/>

        <meta charset="UTF-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0"/>

        <style>
            .center {
                justify-content: center;
                text-align: center;
            }


            .screen {
                height: auto;
                width: 100%;
            }
        </style>
        <title>Overview</title>
    </head>


    <body>
        <div class="mdl-layout mdl-js-layout mdl-layout--fixed-header">
            <div class="mdl-layout__header mdl-layout__header--waterfall">
                <div class="mdl-layout__header-row">
                    <div class="mdl-layout-spacer"></div>
                    <button class="mdl-button mdl-js-button mdl-button--icon mdl-js-ripple-effect" id="more-button">
                        <i class="material-icons">more_vert</i>
                    </button>
                    <ul class="mdl-menu mdl-js-menu mdl-menu--bottom-right mdl-js-ripple-effect" for="more-button">
                        <li class="mdl-menu__item menu_VID" onclick="loadVID();">VID Nederland B.V.</li>
                        <li class="mdl-menu__item menu_GRT" onclick="loadGRT();">Gemeente Rotterdam</li>
                        <li class="mdl-menu__item menu_TM" onclick="loadTM();">Twente Mobiel</li>
                        <li class="mdl-menu__item menu_ALL" onclick="loadALL();">Alles</li>
                        <li class="mdl-menu__item menu_CLR" disabled="" onclick="loadCLR();">Reset</li>
                    </ul>
                </div>
            </div>



            <div class="mdl-layout__content">
                <div class="mdl-grid" id="wall"></div>
            </div>
        </div>



        <!--
            Derive integrity hash by executing

                wget -qO - URI | openssl dgst -sha384 -binary | openssl enc -base64 -A
            
            Set integrity of script as: integrity="sha384-HASH"
        -->

        <script
          crossorigin="anonymous"
          integrity="sha384-xBuQ/xzmlsLoJpyjoggmTEz8OWUFM0/RC5BsqQBDX2v5cMvDHcMakNTNrHIW2I5f"
          src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
        
        <!--
        <script
          crossorigin="anonymous"
          defer=""
          integrity="sha384-Sdn/7riOcTef1/0H0VnTFwn+AoR63nSN6Oc5sUQW5iMkYYAfGSO9hT7yXOGngw+P"
          src="https://cdn.dashjs.org/latest/dash.all.min.js"></script>
        -->
        
        <script
          crossorigin="anonymous"
          defer=""
          integrity="sha384-956oVN7Zn5taOnC+ET6HBmCuiU8b3qVoO+chxfCzwOG2QRGvkx/NsQ+STFqfoH9m"
          src="https://cdn.dashjs.org/latest/dash.mediaplayer.min.js"></script>
        
        <script
          defer=""
          src="https://code.getmdl.io/1.3.0/material.min.js"></script>

        <script src="providers.js"></script>

  

        <script>
            //<![CDATA[
                var cameras = {
                    "list": [],


                    "selectCamera": function (id) {
                        for (let camera of this.list) {
                            if (camera.id === id) {
                                return camera;
                            }
                        }
                        throw new Error("camera not found");
                    },


                    "filter": function(key, value) {
                        var result = [];
                        for (let camera of this.list) {
                            if (typeof camera[key] !== "undefined" && camera[key] === value) {
                                result.push(camera);
                            }
                        }

                        return result;
                    },


                    "checkStream": function (id, stream) {
                        var cam = this.selectCamera(id);
                        if (stream === "live" && (typeof cam.stream === "undefined" || cam.stream === "")) {
                            return false;
                        }
                        return providers.checkStream(cam.provider, stream);
                    },


                    "checkSource": function (id, stream, protocol) {
                        return this.checkStream(id, stream) && providers.checkSource(this.selectCamera(id).provider, stream, protocol);
                    },


                    "getStream": function (id, stream, protocol) {
                        var source = id;
                        var cam = this.selectCamera(id);
                        if (stream === "live") {
                            source = cam.stream;
                        }
                        return providers.selectSource(cam.provider, stream, protocol).location(source);
                    }
                };


                $.getJSON("cameras.json", function (data) {
                    cameras.list = data;
                });
            //]]>
        </script>

  
          
        <script>
            var cctv = {
                addLive: function (src, poster) {
                    var video = document.createElement("video");
                    video.setAttribute("autoplay", "autoplay");
                    video.setAttribute("class", "screen");
                    video.setAttribute("controls", "controls");
                    video.setAttribute("data-dashjs-player", "");
                    video.setAttribute("src", src);

                    if (typeof poster !== "undefined" && poster !== "") {
                        video.setAttribute("poster", poster);
                    }

                    var cell = document.createElement("div");
                    cell.setAttribute("class", "mdl-cell mdl-cell--4-col center");
                    cell.appendChild(video);
                    componentHandler.upgradeElement(cell);
                    document.querySelector("#wall").appendChild(cell);
                },


                addStatic: function (src) {
                    var img = document.createElement("img");
                    img.setAttribute("class", "screen");
                    img.setAttribute("src", src());

                    var reload = function () {
                        setTimeout(reload, 2000);
                        img.setAttribute("src", src());
                    }
                    img.addEventListener("load", reload);

                    var cell = document.createElement("div");
                    cell.setAttribute("class", "mdl-cell mdl-cell--4-col center");
                    cell.appendChild(img);
                    componentHandler.upgradeElement(cell);
                    document.querySelector("#wall").appendChild(cell);
                },


                addCamera: function (id) {
                    if (cameras.checkSource(id, "live", "HTTP Live Streaming")) {
                        var poster;
                        if (cameras.checkSource(id, "static", "image")) {
                            poster = cameras.getStream(id, "static", "image");
                        }
                        this.addLive(cameras.getStream(id, "live", "HTTP Live Streaming"), poster);
                    } else if (cameras.checkSource(id, "static", "image")) {
                        this.addStatic(function () { return cameras.getStream(id, "static", "image"); });
                    }
                },

                addList: function (list) {
                    for (camera of list) {
                        this.addCamera(camera.id);
                    }
                },

                clear: function () {
                    var wall = document.querySelector("#wall");
                    while (wall.firstElementChild) {
                        wall.firstElementChild.remove();
                    }
                }
            };
        </script>
  
  
  
        <script>
            //<![CDATA[
                function loadVID() {
                    document.querySelector("#more-button").dispatchEvent(new Event("click"));

                    document.querySelector(".menu_VID").setAttribute("disabled", "");
                    document.querySelector(".menu_GRT").removeAttribute("disabled")
                    document.querySelector(".menu_TM").removeAttribute("disabled");
                    document.querySelector(".menu_ALL").removeAttribute("disabled");
                    document.querySelector(".menu_CLR").removeAttribute("disabled");

                    cctv.clear();
                    cctv.addList(cameras.filter("manager", "VID Nederland B.V."));
                }

                function loadGRT() {
                    document.querySelector("#more-button").dispatchEvent(new Event("click"));

                    document.querySelector(".menu_VID").removeAttribute("disabled");
                    document.querySelector(".menu_GRT").setAttribute("disabled", "")
                    document.querySelector(".menu_TM").removeAttribute("disabled");
                    document.querySelector(".menu_ALL").removeAttribute("disabled");
                    document.querySelector(".menu_CLR").removeAttribute("disabled");

                    cctv.clear();
                    cctv.addList(cameras.filter("manager", "Gemeente Rotterdam"));
                }

                function loadTM() {
                    document.querySelector("#more-button").dispatchEvent(new Event("click"));

                    document.querySelector(".menu_VID").removeAttribute("disabled");
                    document.querySelector(".menu_GRT").removeAttribute("disabled")
                    document.querySelector(".menu_TM").setAttribute("disabled", "");
                    document.querySelector(".menu_ALL").removeAttribute("disabled");
                    document.querySelector(".menu_CLR").removeAttribute("disabled");

                    cctv.clear();
                    cctv.addList(cameras.filter("manager", "Twente Mobiel"));
                }
                
                function loadALL() {
                    document.querySelector("#more-button").dispatchEvent(new Event("click"));

                    document.querySelector(".menu_VID").removeAttribute("disabled");
                    document.querySelector(".menu_GRT").removeAttribute("disabled")
                    document.querySelector(".menu_TM").removeAttribute("disabled");
                    document.querySelector(".menu_ALL").setAttribute("disabled", "");
                    document.querySelector(".menu_CLR").removeAttribute("disabled");

                    cctv.clear();
                    cctv.addList(cameras.list);
                }

                function loadCLR() {
                    document.querySelector("#more-button").dispatchEvent(new Event("click"));

                    document.querySelector(".menu_VID").removeAttribute("disabled");
                    document.querySelector(".menu_GRT").removeAttribute("disabled")
                    document.querySelector(".menu_TM").removeAttribute("disabled");
                    document.querySelector(".menu_ALL").removeAttribute("disabled");
                    document.querySelector(".menu_CLR").setAttribute("disabled", "");

                    cctv.clear();
                }
            //]]>
        </script>
    </body>
</html>
